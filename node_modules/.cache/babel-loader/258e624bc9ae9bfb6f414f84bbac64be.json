{"ast":null,"code":"var _jsxFileName = \"/Users/zuberalam/Documents/React Crash Course/todos/src/MyComponents/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTodo = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (!title || !description) {\n      alert(\"Title and Description can't be empty\");\n    } else {\n      props.addTodo(title, description);\n      setTitle = \"\";\n      setDescription = \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Add to todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlfor: \"todoTitle\",\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => {\n            setTitle(e.target.value);\n          },\n          className: \"form-control\",\n          id: \"todoTitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlfor: \"todoDescription\",\n          className: \"form-label\",\n          children: \"Todo Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => {\n            setDescription(e.target.value);\n          },\n          className: \"form-control\",\n          id: \"todoDescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-sm\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTodo, \"/6NNF0FwJJsXLHIYvDErymUSBps=\");\n\n_c = AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/zuberalam/Documents/React Crash Course/todos/src/MyComponents/AddTodo.js"],"names":["React","useState","AddTodo","props","title","setTitle","description","setDescription","submit","e","preventDefault","alert","addTodo","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,MAAM,GAAIC,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACN,KAAD,IAAU,CAACE,WAAf,EAA2B;AACvBK,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH,KAFD,MAEK;AACDR,MAAAA,KAAK,CAACS,OAAN,CAAcR,KAAd,EAAqBE,WAArB;AACAD,MAAAA,QAAQ,GAAE,EAAV;AACAE,MAAAA,cAAc,GAAE,EAAhB;AACH;AACJ,GATD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEC,MAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAA2B,UAAA,SAAS,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEJ,KAA1B;AAAiC,UAAA,QAAQ,EAAGK,CAAD,IAAO;AAACJ,YAAAA,QAAQ,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AAAyB,WAA5E;AAA8E,UAAA,SAAS,EAAC,cAAxF;AAAuG,UAAA,EAAE,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAiC,UAAA,SAAS,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAER,WAA1B;AAAuC,UAAA,QAAQ,EAAGG,CAAD,IAAO;AAACF,YAAAA,cAAc,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAd;AAA+B,WAAxF;AAA0F,UAAA,SAAS,EAAC,cAApG;AAAmH,UAAA,EAAE,EAAC;AAAtH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA9BM;;GAAMZ,O;;KAAAA,O","sourcesContent":["import React, {useState} from 'react'\n\nexport const AddTodo = (props) => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!title || !description){\n            alert(\"Title and Description can't be empty\");\n        }else{\n            props.addTodo(title, description)\n            setTitle= \"\";\n            setDescription= \"\";\n        }\n    }\n    return (\n        <div className=\"container my-3\">\n            <h3 className=\"text-center\">Add to todos</h3>\n            <form onSubmit={submit}>\n                <div className=\"mb-3\">\n                    <label htmlfor=\"todoTitle\" className=\"form-label\">Title</label>\n                    <input type=\"text\" value={title} onChange={(e) => {setTitle(e.target.value)}} className=\"form-control\" id=\"todoTitle\" />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlfor=\"todoDescription\" className=\"form-label\">Todo Description</label>\n                    <input type=\"text\" value={description} onChange={(e) => {setDescription(e.target.value)}} className=\"form-control\" id=\"todoDescription\" />\n                </div>\n                <button type=\"submit\" className=\"btn btn-success btn-sm\">Submit</button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}